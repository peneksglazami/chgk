<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2012-2015 Andrey Grigorov, Anton Grigorov

   Licensed under the Apache License, Version 2.0 (the "License"); you may not
   use this file except in compliance with the License. You may obtain a copy of
   the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
   License for the specific language governing permissions and limitations under
   the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <context:property-placeholder location="/WEB-INF/database.properties" system-properties-mode="OVERRIDE"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="${database.name}"/>
                <property name="showSql" value="${hibernate.showSql}"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:annotation-config/>

    <bean class="org.cherchgk.utils.EntityManagerProvider" lazy-init="false"/>

    <bean id="tournamentService" class="org.cherchgk.services.TournamentServiceImpl"/>
    <bean id="teamService" class="org.cherchgk.services.TeamServiceImpl"/>

    <bean id="securityService" class="org.cherchgk.services.SecurityService"/>

    <bean class="org.cherchgk.security.InitSecurityBean"/>

    <bean id="settingsService" class="org.cherchgk.services.SettingsService"/>

    <bean id="mailService" class="org.cherchgk.services.MailService">
        <constructor-arg ref="settingsService"/>
    </bean>

    <bean id="signUpAction" scope="prototype" class="org.cherchgk.actions.security.SignUpAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="confirmSignUpAction" scope="prototype" class="org.cherchgk.actions.security.ConfirmSignUpAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="showRestorePasswordPageAction" scope="prototype" class="com.opensymphony.xwork2.ActionSupport"/>

    <bean id="restorePasswordAction" scope="prototype" class="org.cherchgk.actions.security.RestorePasswordAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="showSetNewPasswordPageAction" scope="prototype"
          class="org.cherchgk.actions.security.ShowSetNewPasswordPageAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="setNewPasswordAction" scope="prototype" class="org.cherchgk.actions.security.SetNewPasswordAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="tournamentListAction" scope="prototype" class="org.cherchgk.actions.tournament.TournamentListAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="newTournamentAction" scope="prototype" class="org.cherchgk.actions.tournament.NewTournamentAction"/>

    <bean id="editTournamentAction" scope="prototype" class="org.cherchgk.actions.tournament.EditTournamentAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="deleteTournamentAction" scope="prototype" class="org.cherchgk.actions.tournament.DeleteTournamentAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="tournamentInfoAction" scope="prototype" class="org.cherchgk.actions.tournament.TournamentInfoAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="editTournamentResultAction" scope="prototype"
          class="org.cherchgk.actions.tournament.result.EditTournamentResultAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="showTournamentResultAction" scope="prototype"
          class="org.cherchgk.actions.tournament.result.show.ShowTournamentResultAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="getPDFTournamentResultAction" scope="prototype"
          class="org.cherchgk.actions.tournament.result.show.GetPDFTournamentResultAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="newTeamAction" scope="prototype" class="org.cherchgk.actions.team.NewTeamAction">
        <constructor-arg ref="tournamentService"/>
    </bean>

    <bean id="teamInfoAction" scope="prototype" class="org.cherchgk.actions.team.TeamInfoAction">
        <constructor-arg ref="teamService"/>
    </bean>

    <bean id="editTeamAction" scope="prototype" class="org.cherchgk.actions.team.EditTeamAction">
        <constructor-arg ref="tournamentService"/>
        <constructor-arg ref="teamService"/>
    </bean>

    <bean id="deleteTeamAction" scope="prototype" class="org.cherchgk.actions.team.DeleteTeamAction">
        <constructor-arg ref="teamService"/>
    </bean>

    <bean id="editAnswerVerdictAction" scope="prototype"
          class="org.cherchgk.actions.tournament.result.EditAnswerVerdictAction">
        <constructor-arg ref="tournamentService"/>
        <constructor-arg ref="teamService"/>
    </bean>

    <bean id="userListAction" class="org.cherchgk.actions.user.UserListAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="newUserAction" scope="prototype" class="org.cherchgk.actions.user.NewUserAction"/>

    <bean id="editUserAction" scope="prototype" class="org.cherchgk.actions.user.EditUserAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="deleteUserAction" scope="prototype" class="org.cherchgk.actions.user.DeleteUserAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="userInfoAction" scope="prototype" class="org.cherchgk.actions.user.UserInfoAction">
        <constructor-arg ref="securityService"/>
    </bean>

    <bean id="settingsAction" scope="prototype" class="org.cherchgk.actions.settings.SettingsAction">
        <constructor-arg ref="settingsService"/>
    </bean>

    <bean id="saveSettingsAction" scope="prototype" class="org.cherchgk.actions.settings.SaveSettingsAction">
        <constructor-arg ref="settingsService"/>
    </bean>

    <bean id="checkMailServerSettingsAction" scope="prototype" class="org.cherchgk.actions.settings.CheckMailServerSettings">
        <constructor-arg ref="mailService"/>
    </bean>
</beans>